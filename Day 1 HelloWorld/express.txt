npm 은 노드 패키지 매니저 
npm이 의존성 추가를 시켜줌 

의존성관리는 package.json에서 가능

npm init -y (초기 세팅을 알아서 해줌)
그 후 npm i express
multer
morgan
pug

------------------ maven이나 Gradle의 역할
의존성 관리파일(package.json)만 있으면 
npm install 시에 의존성들을 로드해줌 


--------------------------- require
require(node_modules)가 생략됨, 'express'만 써주는 이유.

----- express에서 QueryString.. 등 요청 값 받기
req.query.name과 req.param("name" 둘다 사용가능, 똑같은 이유


----------------------------- RestAPI
app.get('/blog/:category/:id', (req, res) => {
	자동으로 매핑시켜줌 
	category = req.params.category
});

----------- supervisor (AUTO_RELOAD)
npm i -g supervisor
-g 옵션 ( 모든 애플리케이션에 대해서 적용함 )
글로벌 옵션은 의존성 파일에 추가되지않는다.

---- scripts 지정시
"start": "supervisor app2" 추가해주면
npm start 시 해당 스크립트 호출

---------------------------- 정적파일 
// 정적 폴더 지정, client가 접근 가능한 정적폴더로 만들어준다.
app.use("/", express.static("./public"));

링크로 접근하면 public directory로 redirecting 해줌

-------------------------- post는 body로 받아야함
// 미들웨어를 사용해서 받아야함
app.use도 미들웨어에 해당 
// 미들웨어 사용 시 use 사용 POST데이터를 알아서 파싱해줌
app.use(bodyParser.json()); // 클라이언트 json 파싱 
app.use(bodyParser.urlencoded({extended: false})); // 포스트 방식으로 넘어온 데이터를 enctype multipart 안쓰겠다

이렇게되면 req.body.값 사용이 가능하다.