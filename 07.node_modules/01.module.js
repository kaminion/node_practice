

const log = console.log;
const clear = console.clear;

log("dirname : " + __dirname);
log("filename : " + __filename);

// 실행타임 측정
console.time("시간");
for(let i=0;i<10000000;i++)
{
	
}
console.timeEnd("시간");

const obj = {
	name : " 홍길동",
	summary : {
		age: 25,
		gender: "M"
	}
}

console.dir(obj);

const os = require('os');
log(os.arch());
log(os.platform());
log(os.type());
log(os.uptime());
log(os.hostname());
log(os.release());

// 경로
log(os.homedir());
log(os.tmpdir());

// CPU, 쓰레드 대신 프로세스에 올려버리는듯
log("================= CPU =================");
log(os.cpus());
log("cpu leng : " + os.cpus().length);

// Memorie
log("os freemem: " + os.freemem());
log("os totalmem: " + os.totalmem());


// PATH

const path = require('path');
let file = __filename;
log("file: " + file);
log("dirname : " + path.dirname(file));
log("extname : " + path.extname(file));
log("basename : " + path.basename(file));
log(path.parse(file)); // 객체로 리턴해줌

log(path.normalize("C:\\\\Users\\hi")); // OS가 인식할 수 있는 경로로 알아서 파싱해줌

let dir = path.join(__dirname, "../../../"); // 상대경로에서부터 실행해서 절대경로로 리턴함
log("dir : " + dir);

// URL
const url = require('url');
const query = require('querystring');
let myURL = new URL('https://naver.com?a=10&b=20#urlHash');

log(myURL);
log(url.format(myURL));

myURL.searchParams.append("test", "000");
log(myURL.searchParams);